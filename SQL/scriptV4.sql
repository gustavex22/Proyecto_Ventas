CREATE DATABASE SISTEMA_CAHSANDCOLLECT
GO
USE SISTEMA_CAHSANDCOLLECT
GO


--Tablas


CREATE TABLE SUCURSALES_BODEGAS
(
ID_BODEGA INT PRIMARY KEY NOT NULL IDENTITY(1,1),
NOMBRE NVARCHAR(100) NOT NULL,
DIRECCION NVARCHAR(MAX) NOT NULL,
CIUDAD NVARCHAR(100)
)


CREATE TABLE PROVEEDOR
(
ID_PROVEEDOR INT PRIMARY KEY NOT NULL IDENTITY(1,1),
NOMBRE VARCHAR(50)NOT NULL,
TELEFONO NVARCHAR(9)NOT NULL,
CORREO VARCHAR(50)NOT NULL,
DIRECCION VARCHAR(50)NOT NULL,
FECHA DATETIME,
Total_Compra Decimal
)

CREATE TABLE BODEGAS_PROVEEDOR --tabla intermedia
(
ID_BODEGA INT,
ID_PROVEEDOR INT,
PRIMARY KEY (ID_BODEGA, ID_PROVEEDOR),
FOREIGN KEY (ID_BODEGA) REFERENCES SUCURSALES_BODEGAS(ID_BODEGA),
FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR)


)


CREATE TABLE ROLES
(
ID_ROL INT PRIMARY KEY IDENTITY(1,1),
NOMBRE_ROL VARCHAR(50)NOT NULL CHECK(NOMBRE_ROL IN('ADMINISTRADOR_BODEGA','CLIENTE')),
UNIQUE (NOMBRE_ROL)
)


CREATE TABLE USUARIO
(
ID_USUARIO INT PRIMARY KEY NOT NULL IDENTITY(1,1),
NOMBRE VARCHAR(50)NOT NULL,
CORREO VARCHAR(100)NOT NULL,
USUARIO VARCHAR(100)NOT NULL,
CONTRASEÑA VARCHAR(50)NOT NULL,
TELEFONO NVARCHAR(9) NOT NULL,
ID_ROL INT,FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL),
ACTIVO BIT NOT NULL, --estado activo =1 o desabilitado = 0
IP_ADDRESS NVARCHAR(50)NOT NULL,
FECHA_CREACION DATETIME DEFAULT GETDATE(),
FECHA_ELIMINACION DATE,
CONSTRAINT FK_USUARIO_ROLES FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL)
)

go

CREATE TABLE CLIENTE
(
ID_CLIENTE INT PRIMARY KEY NOT NULL,
ID_ROL INT,
PREFERENCIAS VARCHAR(200),
DIRECCION VARCHAR(100) NOT NULL,
CODIGO_POSTAL VARCHAR(10),
TARJETA NVARCHAR(16)NOT NULL,
TIENDA_PREDETERMINADA_ID INT,
CONSTRAINT FK_CLIENTE_ROLES FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL)
)

CREATE TABLE ADMINISTRADOR_BODEGA
(
ADMIN_ID INT PRIMARY KEY,
ID_ROL INT,FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL),
ID_BODEGA INT,FOREIGN KEY (ID_BODEGA) REFERENCES SUCURSALES_BODEGAS(ID_BODEGA),
ROL_ADMINISTRATIVO VARCHAR(20)NOT NULL CHECK(ROL_ADMINISTRATIVO IN('ADMINISTRADOR','TRABAJADOR')),

CONSTRAINT FK_ADMIN_BODEGA_ROLES FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL),
CONSTRAINT FK_ADMIN_BODEGA_BODEGA FOREIGN KEY (ID_BODEGA) REFERENCES SUCURSALES_BODEGAS(ID_BODEGA)
)




CREATE TABLE PEDIDOS --tabla intermedia
(
ID_PEDIDO INT PRIMARY KEY IDENTITY(1,1),
ID_USUARIO INT,
ID_BODEGA INT, 
FECHA DATETIME DEFAULT GETDATE(),
ESTADO INT,
METODO_PAGO VARCHAR(50),
TOTAL DECIMAL(10,2),

CONSTRAINT FK_PEDIDOS_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
CONSTRAINT FK_PEDIDOS_BODEGA FOREIGN KEY (ID_BODEGA) REFERENCES SUCURSALES_BODEGAS(ID_BODEGA)
)

CREATE TABLE VENTAS
(
ID_VENTAS INT PRIMARY KEY NOT NULL IDENTITY(1,1),
ID_PEDIDO INT,
ID_USUARIO INT,
FECHA_VENTA VARCHAR(50)NOT NULL,
ESTADO VARCHAR(20) NOT NULL DEFAULT 'PENDIENTE' CHECK (ESTADO IN ('PENDIENTE', 'COMPLETADO', 'CANCELADO')),

CONSTRAINT FK_VENTA_PEDIDO FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDOS(ID_PEDIDO),
CONSTRAINT FK_VENTAS_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
)
CREATE TABLE LOGIN_AUDITORIA 
(
	ID_AUDITORIA INT PRIMARY KEY IDENTITY(1,1),
	ID_USUARIO INT NOT NULL,
	ID_ROL INT NOT NULL,
	ESTADO_LOGIN VARCHAR(50) CHECK (ESTADO_LOGIN IN('EXITOSO','FALLIDO')),
	TIPO_ACCION VARCHAR(50) NOT NULL CHECK (TIPO_ACCION IN ('LOGIN', 'REGISTER','MODIFICADO')),
	CAMPO_MODIFICADO VARCHAR(100),
	DATO_ANTERIOR NVARCHAR(100),
	DATO_NUEVO NVARCHAR(100),
	FECHA_CREACION DATE NOT NULL,
	FECHA_ACCION DATE NOT NULL,
	IP_ADDRESS NVARCHAR(50)NOT NULL,

	CONSTRAINT FK_LOGIN_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
	CONSTRAINT FK_LOGIN_ROL FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL)
)


Create table PRODUCTOS
(
ID_PRODUCTO int primary key not null IDENTITY(1,1),
NOMBRE VARCHAR(50) NOT NULL,
DESCRIPCION VARCHAR(300)NOT NULL,
PRECIO_COSTO DECIMAL(10,2)NOT NULL,
NOMBRE_CATEGORIA VARCHAR(50)NOT NULL,
ID_PROVEEDOR INT,
ESTADO VARCHAR(50) CHECK (ESTADO IN('ACTIVO','DESCONTINUADO','PROMOCION')),
FECHA_VENCIMIENTO DATE,
FECHA_PRODUCCION DATE,
CONSTRAINT FK_PRODUCTOS_PROVEEDOR FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR)
)

GO

CREATE TABLE DETALLE_VENTAS 
(
ID_DETALLE INT PRIMARY KEY NOT NULL,
ID_VENTAS INT,
ID_PRODUCTO INT ,
CANTIDAD INT NOT NULL,
PRECIO_UNITARIO DECIMAL(10,2)NOT NULL,--precio individual para un producto
SUB_TOTAL AS (CANTIDAD*PRECIO_UNITARIO),--suma total
CONSTRAINT FK__DETALLE_VENTAS FOREIGN KEY (ID_VENTAS) REFERENCES VENTAS(ID_VENTAS),
CONSTRAINT FK_DETALLE_PRODUCTOS FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO)
)
GO


CREATE TABLE DEVOLUCION
(
ID_DEVOLUCIONE INT PRIMARY KEY NOT NULL IDENTITY(1,1),
ID_VENTAS INT,
ID_USUARIO INT,
ID_PRODUCTO INT,
MOTIVO VARCHAR(500),
FECHA DATETIME,
CANTIDAD_DEVUELTA INT,
CONSTRAINT FK_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
CONSTRAINT FK_VENTAS FOREIGN KEY (ID_VENTAS) REFERENCES VENTAS(ID_VENTAS),
CONSTRAINT FK_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO)

)
go

CREATE TABLE INVENTARIO (
ID_INVENTARIO INT PRIMARY KEY IDENTITY(1,1),
ID_PRODUCTO INT,
ID_BODEGA INT,
ID_PROVEEDOR INT,
CANTIDAD INT,
FECHA_INGRESO DATETIME,
FECHA_ACTUALIZACION DATETIME,
COSTO_UNITARIO DECIMAL, --LO QUE COSTO AL COMPRAR AL PROVEEDOR
COSTO_VENTA DECIMAL, --EL PRECIO AL QUE VENDE EL DUEÑO
ESTADO VARCHAR(40) NOT NULL CHECK (ESTADO IN('ACTIVO', 'BAJO STOCK', 'AGOTADO')),
MINIMO_STOCK INT, --Cantidad mínima permitida antes de alerta de bajo stock.
MAXIMO_STOCK INT

CONSTRAINT FK_PRODUCTO_INVENTARIO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO),
CONSTRAINT FK_BODEGA_INVENTARIO FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR),
CONSTRAINT FK_PROVEEDOR_INVENTARIO FOREIGN KEY (ID_BODEGA) REFERENCES SUCURSALES_BODEGAS(ID_BODEGA)
)

go

CREATE TABLE AUDITORIA_STOCK
(
ID_AUDITORIA_STOCK INT PRIMARY KEY IDENTITY(1,1),
ID_PRODUCTO INT ,
ID_INVENTARIO INT,
TIPO_MOVIMIENTO VARCHAR(50)NOT NULL CHECK (TIPO_MOVIMIENTO IN('INGRESAR','SALIDA', 'AJUSTE','PRECIO')),
CANTIDAD_ANTERIOR INT,
CANTIDAD_NUEVA INT,	
DESCRIPCION NVARCHAR(500),
FECHA_MOVIMIENTO DATETIME DEFAULT GETDATE(),
CONSTRAINT FK_AUDITORIA_STOCK FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTOS(ID_PRODUCTO),
CONSTRAINT FK_INVENTARIO FOREIGN KEY (ID_INVENTARIO) REFERENCES INVENTARIO(ID_INVENTARIO)
)
